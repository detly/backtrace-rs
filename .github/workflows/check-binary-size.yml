# This workflow checks if a PR commit has changed the size of a hello world Rust program.
# It downloads Rustc and compiles two versions of a stage0 compiler - one using the base commit
# of the PR, and one using the latest commit in the PR.
# If the size of the hello world program has changed, it posts a comment to the PR.
name: Check binary size

on:
  pull_request_target:
    branches:
      - master

jobs:
  test:
    name: Check binary size
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    env:
      RUSTC_DIR: ./rustc
      BACKTRACE_DIR: ./backtrace
    steps:
      - name: Print info
        run: |
          echo "Current SHA: ${{ github.event.pull_request.head.sha }}"
          echo "Base SHA: ${{ github.event.pull_request.base.sha }}"
      # Note: the backtrace source that's cloned here is NOT the version to be
      # patched in to std. It is cloned here to access the Github action for
      # building the test binary and measuring its size.
      - name: Clone backtrace to access Github action
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: $BACKTRACE_DIR
      - name: Clone Rustc
        uses: actions/checkout@v3
        with:
          repository: rust-lang/rust
          fetch-depth: 1
          path: $RUSTC_DIR
      - name: Set up std repository and backtrace submodule for size test
        working-directory: $RUSTC_DIR
        run: |
        run: git submodule update --init library/backtrace
          printf "[llvm]\ndownload-ci-llvm = true\n\n[rust]\nincremental = false\n" > config.toml
          cd library/backtrace
          git remote add head-pr https://github.com/${{ github.event.pull_request.head.repo.full_name }}
          git fetch --all
          cd ../..
      - name: Create hello world program that uses backtrace
        id: create-main-rs
        working-directory: $RUSTC_DIR
        env:
          TEST_MAIN_RS: foo.rs
        run: printf "fn main() { panic!(); }" > $TEST_MAIN_RS
      - name: Compile binary with base version of backtrace
        id: size-reference
        working-directory: $RUSTC_DIR
        uses: $BACKTRACE_DIR/.github/actions/build-with-patched-std
        with:
          backtrace-commit: ${{ github.event.pull_request.base.sha }}
          main-rs: ${{ steps.create-main-rs.env.TEST_MAIN_RS }}
      - name: Compile binary with PR version of backtrace
        id: size-updated
        working-directory: $RUSTC_DIR
        uses: $BACKTRACE_DIR/.github/actions/build-with-patched-std
        with:
          backtrace-commit: ${{ github.event.pull_request.head.sha }}
          main-rs: ${{ steps.create-main-rs.env.TEST_MAIN_RS }}
      - name: Post a PR comment if the size has changed
        uses: actions/github-script@v6
        env:
          SIZE_REFERENCE: ${{ steps.size-reference.output }}
          SIZE_UPDATED: ${{ steps.size-updated.output }}
        with:
          script: |
            const reference = process.env.SIZE_REFERENCE;
            const updated = process.env.SIZE_UPDATED;
            const diff = updated - reference;
            const plus = diff > 0 ? "+" : "";
            const diff_str = `${plus}${diff}B`;

            if (diff !== 0) {
              const percent = (((updated / reference) - 1) * 100).toFixed(2);
              // The body is created here and wrapped so "weirdly" to avoid whitespace at the start of the lines,
              // which is interpreted as a code block by Markdown.
              const body = `Below is the size of a hello-world Rust program linked with libstd with backtrace.

            Original binary size: **${reference}B**
            Updated binary size: **${updated}B**
            Difference: **${diff_str}** (${percent}%)`;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body
              })
            }
